# Use the .NET Core SDK as the base image for building the application
FROM mcr.microsoft.com/dotnet/sdk:7.0 AS build-env
# Download the Microsoft repository GPG keys
RUN wget https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb



# Install the .NET SDK
#RUN apt update
#RUN apt install -y apt-transport-https
#RUN apt update
#RUN apt install -y dotnet-sdk-6.0
# Download the Microsoft repository GPG key
#wget https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb

# Register the Microsoft repository GPG ke
RUN dpkg -i packages-microsoft-prod.deb

# Enable the "universe" repository (if not already enabled)
RUN add-apt-repository universe

# Update the package list
RUN apt-get update

# Install the .NET SDK
RUN apt-get install -y dotnet-sdk-6.0
# Set the working directory inside the container
WORKDIR /app

# Copy the .csproj and restore dependencies (optimizing caching)
COPY LoginMicroService/Program.cs /app/
#COPY LoginMicroService/WeatherForecast.cs /app/

COPY LoginMicroService/AuthMicroService.csproj /app/LoginMicroService/

COPY LoginMicroService/ .


RUN dotnet restore

# Copy the remaining application code
COPY . ./

# Build the application inside the container

RUN dotnet publish LoginMicroService/AuthMicroService.csproj -c Release -o out
# Create a runtime image
FROM mcr.microsoft.com/dotnet/aspnet:7.0
WORKDIR /app
COPY --from=build-env /app/out .
EXPOSE 80

# Define the entry point for the application
CMD dotnet build LoginMicroService.sln



*******************************************************************



# Use the .NET Core SDK as the base image for building the application
FROM mcr.microsoft.com/dotnet/sdk:7.0 AS build-env
# Download the Microsoft repository GPG keys
RUN wget https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb -O packages-microsoft-prod.
# Set the working directory inside the container
WORKDIR /app

# Copy the .csproj and restore dependencies (optimizing caching)
COPY LoginMicroService/Program.cs /app/
#COPY LoginMicroService/WeatherForecast.cs /app/

COPY LoginMicroService/AuthMicroService.csproj /app/LoginMicroService/

COPY LoginMicroService/ .


RUN dotnet restore

# Copy the remaining application code
COPY . ./

# Build the application inside the container

RUN dotnet publish LoginMicroService/AuthMicroService.csproj -c Release -o out
# Create a runtime image
FROM mcr.microsoft.com/dotnet/aspnet:7.0
WORKDIR /app
COPY --from=build-env /app/out .
EXPOSE 80